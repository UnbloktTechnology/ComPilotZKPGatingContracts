name: SDK Release - manual

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
        description: Branch

permissions:
  contents: write
  pull-requests: write
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ inputs.branch || github.ref }}-sdk-release-manual
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.14]
        pnpm-version: [9.2.0]
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.MERGE_BOT_APP_ID }}
          private_key: ${{ secrets.MERGE_BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0

      - uses: pnpm/action-setup@v3.0.0
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Config github actions user
        run: |
          git config --global user.name "nexera-release[bot]"
          git config --global user.email "137495321+nexera-release[bot]@users.noreply.github.com"

      - name: Set branch name
        id: branch_name
        run: |
          original_branch="${{ inputs.branch }}"
          timestamp=$(date +%s%3N)

          branch_name=$(echo "$original_branch-$timestamp" | tr '/' '-' | tr '_' '-')

          echo $branch_name
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Set release tag
        id: tag_release
        run: |
          release_tag="dev"

          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: Prepare release version
        run: |
          echo ${{ steps.tag_release.outputs.tag_release }}
          echo ${{ steps.branch_name.outputs.branch_name }}

          version=$(pnpm pkg get version -w "@nexeraid/zkp-gating-contracts" | jq -r '.["@nexeraid/zkp-gating-contracts"]')
          pnpm pkg set version="$version-${{ steps.branch_name.outputs.branch_name }}" -w "@nexeraid/zkp-gating-contracts"
          echo $version

          version=$(pnpm pkg get version -w "@nexeraid/zkp-gating-contracts-sdk" | jq -r '.["@nexeraid/zkp-gating-contracts-sdk"]')
          pnpm pkg set version="$version-${{ steps.branch_name.outputs.branch_name }}" -w "@nexeraid/zkp-gating-contracts-sdk"
          echo $version

      - name: Build and publish contracts to npm
        env:
          AMOY_PROVIDER_URL: ${{ secrets.AMOY_PROVIDER_URL }}
          TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}
          POLYGON_MAINNET_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_PROVIDER_URL }}
          DEPLOYMENT_MNEMONIC: ${{ secrets.DEPLOYMENT_MNEMONIC }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SALT: ${{ secrets.SALT }}
        run: |
          pnpm run build:contracts
          pnpm --filter @nexeraid/zkp-gating-contracts-sdk build

      - name: Build and publish contracts infos to npm
        env:
          AMOY_PROVIDER_URL: ${{ secrets.AMOY_PROVIDER_URL }}
          TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}
          POLYGON_MAINNET_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_PROVIDER_URL }}
          DEPLOYMENT_MNEMONIC: ${{ secrets.DEPLOYMENT_MNEMONIC }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SALT: ${{ secrets.SALT }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPMJS_COM_TOKEN" > .npmrc

          pnpm --filter "@nexeraid/zkp-gating-contracts" publish --access=public --no-git-checks --registry https://registry.npmjs.org/ --tag ${{ steps.tag_release.outputs.release_tag }}

          pnpm --filter "@nexeraid/zkp-gating-contracts-sdk" publish --access=public --no-git-checks --registry https://registry.npmjs.org/ --tag ${{ steps.tag_release.outputs.release_tag }}
